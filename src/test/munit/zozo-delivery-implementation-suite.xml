<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="zozo-delivery-implementation-suite.xml" />
	<munit:test name="InsertDeliveryDetailsInDatabase-test" doc:id="20b0d8b3-d525-475b-90d8-5b64c3ba1014" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="501bf83e-1ba5-451c-8ab6-8e6687f207dc" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb53ec9f-e605-410b-818e-dcaa27b98df4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://InsertDeliveryDetailsInDatabasetest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://InsertDeliveryDetailsInDatabasetest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="a85f4f67-ba9d-4ba7-ab14-b7c8010f5afd" >
				<munit:payload value="#[output application/json --- readUrl('classpath://InsertDeliveryDetailsInDatabasetest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://InsertDeliveryDetailsInDatabasetest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://InsertDeliveryDetailsInDatabasetest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to InsertDeliveryDetailsInDatabase" doc:id="7500f105-70bc-46cf-9fa3-aaef948163c2" name="InsertDeliveryDetailsInDatabase"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="deb41e2c-966a-4cc0-9b72-b8b0d92158b3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import InsertDeliveryDetailsInDatabasetest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
	<munit:test name="InsertDeliveryDetailsInDatabase-test-error" doc:id="253134ba-8c14-4fcb-b0c0-0fe5b37c70f2" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="9049f054-35ed-4f09-bf07-0f3ec717c60f" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb53ec9f-e605-410b-818e-dcaa27b98df4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:CONNECTIVITY" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="a7ec5e15-959c-47f4-a02d-99d80067a2f6" >
				<munit:payload value="#[output application/json --- readUrl('classpath://InsertDeliveryDetailsInDatabasetest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://InsertDeliveryDetailsInDatabasetest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://InsertDeliveryDetailsInDatabasetest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="35671a9d-dd19-4004-95fd-e4711f93cc0c" >
				<flow-ref doc:name="Flow-ref to InsertDeliveryDetailsInDatabase" doc:id="7cdd8ee2-69c0-4dd6-9fe4-34a2141fdce7" name="InsertDeliveryDetailsInDatabase" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="67e89e81-7650-4e09-bf73-55a01523acf7" >
						<logger level="INFO" doc:name="Logger" doc:id="204174b4-e464-4318-a328-b316d7e0757e" />
					</on-error-continue>
				</error-handler>
			</try>

		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="f0005198-1184-42e2-9dc3-3e8e44ea0d75" is='#[MunitTools::equalTo("There is some Database issue")]' expression="#[payload.message]"/>

		</munit:validation>
	
</munit:test>


</mule>
